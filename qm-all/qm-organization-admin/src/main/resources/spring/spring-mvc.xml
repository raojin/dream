<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    <!-- 添加默认servlet -->
    <mvc:default-servlet-handler />
     <!-- 启用Spring  MVC controller注解 -->
    <mvc:annotation-driven/>
    <!-- 扫描controller（controller层注入） -->
     <context:component-scan base-package="com.qmdj.organization.controller"/>  
     <context:component-scan base-package="com.qmdj.biz"/>  
   <!-- 
     <mvc:annotation-driven/>-->
    <!-- 扫描service（service层注入） -->
   <context:component-scan base-package="com.qmdj.service"/>
   
   <!-- 避免IE在ajax请求时，返回json出现下载 -->
   <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">		
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	     <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
	    <bean id="mappingJacksonHttpMessageConverter"  
	        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
	        <property name="supportedMediaTypes">  
	            <list>  
	                <value>text/html;charset=UTF-8</value>  
	            </list>  
	        </property>  
	    </bean>
	 <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean> 
	
	<!-- FreeMarker视图解析 。 -->
	<!-- <bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties" />
	</bean>

	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
		<property name="templateLoaderPath" value="/WEB-INF/views/jsp/" />
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<bean id="freemarkerViewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="viewNames" value="*.html" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value="" />
		<property name="order" value="2" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>
 -->
    <!-- 配置JSP视图 -->
     <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/jsp/"/>
        <property name="suffix" value=".jsp"/>      
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="1"/>
     </bean>
     
     
   <!--   <bean id="springSessionInterceptor" class="com.qmdj.organization.filter.FilterUtils" >  
     </bean>   -->
	<bean id="autoPorxyFactoryBean1"  
	        class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">  
<!-- 	        <property name="interceptorNames">  
	            <list>  
	                <value>springLoginInterceptor</value>  
	            </list>  
	        </property> -->  
	        <property name="beanNames" >  
	        	<list>  
	           	 	<value>*Controller</value>  
	            </list>  
	        </property>  
	    </bean>  
	</beans>